diff --git a/build/common.gypi b/build/common.gypi
index 5f31d19..3b9598d 100644
--- a/build/common.gypi
+++ b/build/common.gypi
@@ -4069,65 +4069,6 @@
                       }],
                     ],
                   }],
-                  ['chromecast==1', {
-                    'cflags': [
-                      # We set arm_arch to "" so that -march compiler option
-                      # is not set.  Otherwise a gcc bug that would complain
-                      # about it conflicting with '-mcpu=cortex-a9'. The flag
-                      # '-march=armv7-a' is actually redundant anyway because
-                      # it is enabled by default when we built the toolchain.
-                      # And using '-mcpu=cortex-a9' should be sufficient.
-                      '-mcpu=cortex-a9',
-                      '-funwind-tables',
-                      # Breakpad requires symbols with debugging information
-                      '-g',
-                    ],
-                    'ldflags': [
-                      # We want to statically link libstdc++/libgcc.
-                      '-static-libstdc++',
-                      '-static-libgcc',
-                      # Don't allow visible symbols from libraries that contain
-                      # assembly code with symbols that aren't hidden properly.
-                      # http://b/26390825
-                      '-Wl,--exclude-libs=libffmpeg.a',
-                    ],
-                    'cflags!': [
-                      # Some components in Chromium (e.g. v8, skia, ffmpeg)
-                      # define their own cflags for arm builds that could
-                      # conflict with the flags we set here (e.g.
-                      # '-mcpu=cortex-a9'). Remove these flags explicitly.
-                      '-march=armv7-a',
-                      '-mtune=cortex-a8',
-                    ],
-                    'target_conditions': [
-                      [ '_type=="executable" and OS!="android"', {
-                        # Statically link whole libstdc++ and libgcc in
-                        # executables to ensure only one copy at runtime.
-                        'ldflags': [
-                          # Note executables also get -static-stdlibc++/libgcc.
-                          # Despite including libstdc++/libgcc archives, we
-                          # still need to specify static linking for them in
-                          # order to prevent the executable from having a
-                          # dynamic dependency on them.
-
-                          # Export stdlibc++ and libgcc symbols to force shlibs
-                          # to refer to these symbols from the executable.
-                          '-Wl,--export-dynamic',
-
-                          '-lm', # stdlibc++ requires math.h
-
-                          # In case we redefined stdlibc++ symbols
-                          # (e.g. tc_malloc)
-                          '-Wl,--allow-multiple-definition',
-
-                          '-Wl,--whole-archive',
-                          '-l:libstdc++.a',
-                          '-l:libgcc.a',
-                          '-Wl,--no-whole-archive',
-                        ],
-                      }]
-                    ],
-                  }],
                 ],
               }],
             ],
